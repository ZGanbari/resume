{"version":3,"sources":["component/FullPage.js","component/icon.js","sections/title.js","sections/about.js","component/up.js","sections/skill.js","component/navbar.js","App.js","serviceWorker.js","index.js"],"names":["FullPage","children","this","props","className","Component","Down","icon","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","Title","data","name","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","About","sections","item","content","Up","Skill","iteme","skill","image","alt","up","Nav","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"q9CAagBA,G,6KATH,IACEC,EAAWC,KAAKC,MAAhBF,SACP,OACJ,yBAAKG,UAAS,mBAAcF,KAAKC,MAAMC,UAAzB,YACTH,O,GALeI,cCyBRC,E,uKAxBT,IAAMC,EAAKL,KAAKC,MAAMI,KACrB,OACI,yBACAC,MACI,CACIC,QAAS,OACTC,cAAc,MACdC,WAAW,SACXC,eAAe,SACfC,aAAa,QACbC,UAAU,yBAId,yBACAN,MAAO,CAACO,SAAS,SACb,yBAAKC,IAAKT,U,GAlBVF,a,OC0CJY,E,uKAnCR,IAAMC,EAAMhB,KAAKC,MAAMe,KACvB,OACI,6BACE,kBAAC,UAAD,CAASC,KAAK,QAAQf,UAAU,YACnC,kBAAC,EAAD,CAAUA,UAAU,SACzB,4BACKc,EAAKE,OAER,4BACGF,EAAKG,UAER,yBAAKjB,UAAW,YAChBkB,OAAOC,KAAKL,EAAKM,OAAOC,KAAI,SAAAC,GAC3B,OACC,yBAAKtB,UAAW,QAAhB,IAAwB,kBAAC,aAAD,CAAYuB,IAAKT,EAAKM,MAAME,WAMnD,kBAAC,OAAD,CAAME,YAAY,SACjBC,GAAG,QAAQC,KAAK,EAChBC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,MAAO,GAER,kBAAC,EAAD,CAAM3B,KAAMW,EAAKX,QAEjB,kBAAC,UAAD,CAASY,KAAK,QAAQf,UAAU,iB,GA/BtBC,aC4BL8B,G,6KAvBR,IAAMjB,EAAMhB,KAAKC,MAAMe,KACvB,OACE,6BACK,kBAAC,EAAD,CAAUd,UAAU,UACzB,wBAAIA,UAAU,MAAMc,EAAKkB,SAAS,GAAGhB,OACtC,2BAAIF,EAAKkB,SAAS,GAAGC,KAAK,GAAGC,SAC7B,2BAAIpB,EAAKkB,SAAS,GAAGC,KAAK,GAAGC,UAExB,kBAAC,OAAD,CAAMV,YAAY,SACpBC,GAAG,QAAQC,KAAK,EAChBC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,MAAO,GAER,kBAAC,EAAD,CAAM3B,KAAMW,EAAKX,QAEjB,kBAAC,UAAD,CAASY,KAAK,QAAQf,UAAU,iB,GAnBtBC,cCoBLkC,G,6KAzBT,IAAMhC,EAAKL,KAAKC,MAAMI,KACrB,OACI,yBACAC,MACI,CACIC,QAAS,OACTC,cAAc,MACdC,WAAW,SACXC,eAAe,SACfC,aAAa,WAMjB,yBACAL,MAAO,CAACO,SAAS,SACb,yBAAKC,IAAKT,U,GAnBbF,cC6CDmC,E,uKAtCR,IAAMtB,EAAMhB,KAAKC,MAAMe,KACvB,OACE,6BACC,kBAAC,EAAD,CAAUd,UAAU,SACxB,wBAAIA,UAAU,MACTc,EAAKkB,SAAS,GAAGhB,OAElB,yBAAKhB,UAAU,YACZc,EAAKkB,SAAS,GAAGK,MAAMhB,KAAI,SAAAiB,GAC1B,OACA,yBAAKtC,UAAU,SACb,yBAAKA,UAAU,UACb,yBAAMY,IAAK0B,EAAMJ,QAAQK,MAAOC,IAAKF,EAAMJ,QAAQM,OAErD,yBAAKxC,UAAU,YACb,4BAAKsC,EAAMJ,QAAQlB,cAS3B,kBAAC,OAAD,CAAMQ,YAAY,SACjBC,GAAG,QAAQC,KAAK,EAChBC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,MAAO,GAER,kBAAC,EAAD,CAAI3B,KAAMW,EAAK2B,MAEf,kBAAC,UAAD,CAAS1B,KAAK,QAAQf,UAAU,iB,GAnCtBC,aCoDNyC,G,6KAlDR,OACC,yBAAK1C,UAAU,OACf,yBAAKA,UAAU,YACf,kBAAC,OAAD,CAAMwB,YAAY,SACdC,GAAG,QAAQC,KAAK,EAChBC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,MAAO,GACjB,yBAAK9B,UAAU,UAAf,SAMS,kBAAC,OAAD,CAAMwB,YAAY,SACjBC,GAAG,QAAQC,KAAK,EAChBC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,MAAO,GACjB,yBAAK9B,UAAU,UAAf,UAKS,kBAAC,OAAD,CAAMwB,YAAY,SACjBC,GAAG,QAAQC,KAAK,EAChBC,QAAQ,EACRC,OAAQ,GACRC,SAAU,IACVC,MAAO,GACjB,yBAAK9B,UAAU,UAAf,YAOM,yBAAKA,UAAU,SAAf,oB,GA3CUC,c,iBCoBH0C,MAjBf,WAEE,OACE,yBAAK3C,UAAU,OAEX,kBAAC,IAAD,MACF,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOc,KAAMA,IACf,kBAAC,EAAD,CAAOA,KAAMA,IACjB,kBAAC,EAAD,CAAOA,KAAMA,IACb,kBAAC,IAAD,QCPoB8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.72519e41.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\nimport './FullPage.css'\r\n\r\n class FullPage extends Component{\r\n    render(){\r\n        const {children}= this.props\r\n        return(\r\n    <div className={`fullPage ${this.props.className} || \"\" `}>\r\n       { children}\r\n    </div>\r\n)\r\n    }\r\n}\r\n export default FullPage","import React, {Component} from \"react\"\r\n\r\n class Down extends Component{\r\n    render(){\r\n       const icon=this.props.icon\r\n        return(\r\n            <div \r\n            style={\r\n                {\r\n                    display :\"flex\",\r\n                    flexDirection:\"row\",\r\n                    alignItems:\"center\",\r\n                    justifyContent:\"center\",\r\n                    marginBottom:\"-44px\",\r\n                    transform:\"translate(0px,-50px)\"\r\n            \r\n                }\r\n            }>\r\n                <div\r\n                style={{maxWidth:\"40px\"}}>\r\n                    <img src={icon} />\r\n                </div>\r\n\r\n            </div>\r\n   \r\n)\r\n    }\r\n}\r\n export default Down\r\n","import React, {Component} from \"react\"\r\nimport './title.css'\r\nimport {SocialIcon} from \"react-social-icons\"\r\nimport FullPage from \"../component/FullPage\"\r\nimport Down from \"../component/icon\"\r\nimport { Link, Element } from 'react-scroll'\r\n\r\n class Title extends Component{\r\n    render(){\r\n        const data= this.props.data\r\n        return(\r\n            <div>\r\n              <Element name=\"title\" className=\"element\"/>\r\n           <FullPage className=\"first\">\r\n      <h1 >\r\n          {data.title} \r\n        </h1>\r\n        <h2>\r\n          {data.subtitle}\r\n        </h2>\r\n        <div className= \"icons-wr\">\r\n       {Object.keys(data.links).map(key=>{\r\n         return(\r\n          <div className= \"icon\"> <SocialIcon url={data.links[key]}/></div>\r\n         )\r\n       })}\r\n      </div>\r\n      \r\n           </FullPage>\r\n           <Link activeClass=\"active\"\r\n            to=\"about\" spy={true}\r\n            smooth={true} \r\n            offset={50} \r\n            duration={500} \r\n            delay={5}>\r\n  \r\n           <Down icon={data.icon}/>\r\n           </Link>\r\n           <Element name=\"about\" className=\"element\"/>\r\n          \r\n    </div>\r\n)\r\n    }\r\n}\r\n export default Title","import React, {Component} from \"react\"\r\nimport './about.css'\r\nimport FullPage from \"../component/FullPage\"\r\nimport Down from \"../component/icon\"\r\n\r\n import { Link, Element } from 'react-scroll'\r\n\r\n\r\n\r\n\r\n class About extends Component{\r\n    render(){\r\n        const data= this.props.data\r\n        return(\r\n          <div>\r\n               <FullPage className=\"second\">\r\n          <h1 className=\"h1\">{data.sections[0].title}</h1>\r\n         <p>{data.sections[0].item[0].content}</p>\r\n         <p>{data.sections[0].item[1].content}</p>\r\n              </FullPage>\r\n              <Link activeClass=\"active\"\r\n            to=\"skill\" spy={true}\r\n            smooth={true} \r\n            offset={50} \r\n            duration={500} \r\n            delay={5}>\r\n  \r\n           <Down icon={data.icon}/>\r\n           </Link>\r\n           <Element name=\"skill\" className=\"element\"/>\r\n               </div>\r\n    \r\n)\r\n    }\r\n}\r\n export default About","import React, {Component} from \"react\"\r\n\r\n\r\nclass Up extends Component{\r\n    render(){\r\n       const icon=this.props.icon\r\n        return(\r\n            <div \r\n            style={\r\n                {\r\n                    display :\"flex\",\r\n                    flexDirection:\"row\",\r\n                    alignItems:\"center\",\r\n                    justifyContent:\"center\",\r\n                    marginBottom:\"-100px\",\r\n                   \r\n                   \r\n            \r\n                }\r\n            }>\r\n                <div\r\n                style={{maxWidth:\"40px\"}}>\r\n                    <img src={icon} />\r\n                </div>\r\n\r\n            </div>\r\n   \r\n)\r\n    }\r\n}\r\n export default Up","import React, {Component} from \"react\"\r\nimport './skill.css'\r\n import { Link, Element } from 'react-scroll'\r\nimport Up from \"../component/up\"\r\n\r\nimport FullPage from \"../component/FullPage\"\r\n\r\n\r\n class Skill extends Component{\r\n    render(){\r\n        const data= this.props.data\r\n        return(\r\n          <div>\r\n           <FullPage className=\"third\">\r\n       <h1 className=\"h1\">\r\n           {data.sections[1].title}\r\n           </h1>\r\n           <div className=\"cards-wr\">\r\n             {data.sections[1].iteme.map(skill=>\r\n             { return(\r\n               <div className=\"cards\">\r\n                 <div className=\"img-wr\">\r\n                   <img  src={skill.content.image} alt={skill.content.alt}/>\r\n                 </div>\r\n                 <div className=\"skill-wr\">\r\n                   <h2>{skill.content.title}\r\n            </h2>\r\n                 </div>\r\n\r\n               </div>\r\n\r\n              );})}\r\n           </div>\r\n           </FullPage>\r\n           <Link activeClass=\"active\"\r\n            to=\"title\" spy={true}\r\n            smooth={true} \r\n            offset={50} \r\n            duration={500} \r\n            delay={5}>\r\n  \r\n           <Up icon={data.up} />\r\n           </Link>\r\n           <Element name=\"skill\" className=\"element\"/>\r\n    </div>\r\n)\r\n    }\r\n}\r\n export default Skill","import React, { Component } from \"react\";\r\nimport { Link, Element } from 'react-scroll'\r\n \r\n\r\nimport \"./navbar.css\"\r\n\r\nclass Nav extends Component{\r\n  \r\n\r\n   render(){\r\n       return(\r\n        <div className=\"Nav\" >\r\n        <div className=\"sections\" >\r\n        <Link activeClass=\"active\"\r\n            to=\"title\" spy={true}\r\n            smooth={true} \r\n            offset={50} \r\n            duration={500} \r\n            delay={5}>\r\n  <div className=\"button\">\r\n           Home\r\n           </div>\r\n           \r\n           </Link>\r\n       \r\n           <Link activeClass=\"active\"\r\n            to=\"about\" spy={true}\r\n            smooth={true} \r\n            offset={50} \r\n            duration={500} \r\n            delay={5}>\r\n  <div className=\"button\">\r\n          About\r\n           </div>\r\n           \r\n           </Link>\r\n           <Link activeClass=\"active\"\r\n            to=\"skill\" spy={true}\r\n            smooth={true} \r\n            offset={50} \r\n            duration={500} \r\n            delay={5}>\r\n  <div className=\"button\">\r\n           Skills\r\n           </div>\r\n           \r\n           </Link>\r\n           \r\n        </div>\r\n        <div className=\"chang\" \r\n        // onClick={()=>{ChangeTeme()}}\r\n        >\r\n           \r\n            Change Teme\r\n        \r\n            </div>\r\n    </div>\r\n       )\r\n   }\r\n}\r\nexport default Nav","import React from 'react';\n\nimport data from \"./data.json\"\nimport Title from \"./sections/title\"\nimport About from './sections/about';\nimport Skill from './sections/skill';\nimport Nav from \"./component/navbar\"\nimport SnowStorm from 'react-snowstorm';\n\nfunction App() {\n\n  return (\n    <div className=\"App\" >\n     \n        <SnowStorm/>\n      <Nav></Nav>\n      <Title data={data} />\n    <About data={data} />\n<Skill data={data} /> \n<SnowStorm/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}